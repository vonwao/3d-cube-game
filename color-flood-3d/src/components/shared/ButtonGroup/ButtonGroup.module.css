/**
 * ButtonGroup Component Styles
 * 
 * Groups related buttons together with consistent spacing and styling.
 * Used for size selectors, speed controls, filters, etc.
 * 
 * @potential-issue: May conflict with Radix UI ToggleGroup in future
 */

.buttonGroup {
  /* Layout */
  display: inline-flex;
  gap: 0; /* Buttons connect to each other */
  
  /* Glass background for the group */
  background: hsl(var(--color-glass-background));
  backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
  -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-saturation));
  border: 1px solid hsl(var(--color-glass-border));
  border-radius: var(--radius-base);
  padding: var(--space-1);
  
  /* Ensure proper stacking */
  position: relative;
  z-index: 0;
}

/* =================================================================
 * BUTTON OVERRIDES
 * =================================================================
 */

.buttonGroup > * {
  /* Remove individual button borders and backgrounds */
  background: transparent;
  border: none;
  border-radius: 0;
  box-shadow: none;
  
  /* Add dividers between buttons */
  position: relative;
}

/* First and last button border radius */
.buttonGroup > *:first-child {
  border-top-left-radius: calc(var(--radius-base) - var(--space-1));
  border-bottom-left-radius: calc(var(--radius-base) - var(--space-1));
}

.buttonGroup > *:last-child {
  border-top-right-radius: calc(var(--radius-base) - var(--space-1));
  border-bottom-right-radius: calc(var(--radius-base) - var(--space-1));
}

/* Dividers between buttons */
.buttonGroup > *:not(:last-child)::after {
  content: "";
  position: absolute;
  right: 0;
  top: 25%;
  bottom: 25%;
  width: 1px;
  background: hsl(var(--color-glass-border));
  opacity: 0.5;
}

/* Selected state */
.buttonGroup > *.selected,
.buttonGroup > *[aria-pressed="true"] {
  background: hsl(var(--color-primary) / 0.2);
  color: hsl(var(--color-primary));
}

/* Hover state */
.buttonGroup > *:hover:not(:disabled):not(.selected) {
  background: hsl(var(--color-glass-background));
}

/* Focus state */
.buttonGroup > *:focus-visible {
  z-index: 1; /* Ensure focus ring shows above siblings */
  outline: 2px solid hsl(var(--color-primary));
  outline-offset: -2px;
}

/* =================================================================
 * LAYOUT VARIANTS
 * =================================================================
 */

/* Vertical orientation */
.vertical {
  flex-direction: column;
}

.vertical > *:first-child {
  border-radius: 0;
  border-top-left-radius: calc(var(--radius-base) - var(--space-1));
  border-top-right-radius: calc(var(--radius-base) - var(--space-1));
}

.vertical > *:last-child {
  border-radius: 0;
  border-bottom-left-radius: calc(var(--radius-base) - var(--space-1));
  border-bottom-right-radius: calc(var(--radius-base) - var(--space-1));
}

.vertical > *:not(:last-child)::after {
  right: 25%;
  left: 25%;
  top: auto;
  bottom: 0;
  width: auto;
  height: 1px;
}

/* =================================================================
 * SIZE VARIANTS
 * =================================================================
 */

.small {
  padding: 2px;
}

.small > * {
  padding: var(--space-1) var(--space-2);
  font-size: var(--font-size-sm);
}

.large {
  padding: var(--space-2);
}

.large > * {
  padding: var(--space-3) var(--space-4);
  font-size: var(--font-size-lg);
}

/* =================================================================
 * STYLE VARIANTS
 * =================================================================
 */

/* Filled variant - buttons have background */
.filled {
  background: transparent;
  border: none;
  padding: 0;
  gap: var(--space-1);
}

.filled > * {
  background: hsl(var(--color-surface-elevated));
  border: 1px solid hsl(var(--color-glass-border));
  border-radius: var(--radius-base);
}

.filled > *:not(:last-child)::after {
  display: none;
}

.filled > *.selected,
.filled > *[aria-pressed="true"] {
  background: hsl(var(--color-primary));
  color: white;
  border-color: hsl(var(--color-primary));
}

/* Minimal variant */
.minimal {
  background: transparent;
  border: none;
  backdrop-filter: none;
  -webkit-backdrop-filter: none;
  padding: 0;
  gap: var(--space-2);
}

.minimal > * {
  border-radius: var(--radius-base);
}

.minimal > *:not(:last-child)::after {
  display: none;
}

/* =================================================================
 * FULL WIDTH
 * =================================================================
 */

.fullWidth {
  width: 100%;
}

.fullWidth > * {
  flex: 1;
}

/* =================================================================
 * RESPONSIVE
 * =================================================================
 */

@media (max-width: 768px) {
  /* Ensure proper touch targets */
  .buttonGroup > * {
    min-width: 44px;
    min-height: 44px;
  }
}