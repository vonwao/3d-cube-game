/* Color Flood Game CSS Module */

/* Game Container */
.colorFloodGame {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.gameContainer {
  display: flex;
  width: 100%;
  height: 100%;
  position: relative;
  flex-direction: row;
}

/* Canvas Container - Critical for Three.js */
.gameScene {
  flex: 1;
  position: relative;
  overflow: hidden;
  margin-right: 272px; /* 240px panel + 32px margin */
}

/* 
 * Canvas styles with high specificity to override Three.js inline styles
 * Using CSS Modules' :global() for targeting the canvas element
 */
.gameCanvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  cursor: default;
}

/* Ensure canvas element inside container fills space */
.gameScene :global(canvas) {
  width: 100%;
  height: 100%;
  display: block;
}

/* Game HUD */
.gameHud {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  z-index: 10;
  padding: 1rem;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
}

.hudTop {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}

.movesDisplay,
.starsDisplay {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.25rem;
}

.movesCounter {
  display: flex;
  align-items: baseline;
  gap: 0.25rem;
  font-size: 1.5rem;
  font-weight: bold;
  color: white;
}

.movesCurrent {
  color: #4ade80;
}

.movesDivider {
  color: rgba(255, 255, 255, 0.6);
}

.movesMax {
  color: rgba(255, 255, 255, 0.8);
}

.movesLabel,
.starsLabel {
  font-size: 0.8rem;
  color: rgba(255, 255, 255, 0.7);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.starsContainer {
  display: flex;
  gap: 0.25rem;
}

.star {
  font-size: 1.2rem;
  transition: all 0.3s ease;
}

.starFilled {
  color: #fbbf24;
  text-shadow: 0 0 8px #fbbf24;
}

.starEmpty {
  color: rgba(255, 255, 255, 0.3);
}

.controls {
  display: flex;
  gap: 0.5rem;
}

.controlButton {
  width: 2.5rem;
  height: 2.5rem;
  border: none;
  border-radius: 0;
  background: rgba(255, 255, 255, 0.2);
  color: white;
  font-size: 1.2rem;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  backdrop-filter: blur(5px);
}

.controlButton:hover:not(:disabled) {
  background: rgba(255, 255, 255, 0.3);
  transform: scale(1.1);
}

.controlButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.hudStatus {
  text-align: center;
  margin-top: 0.5rem;
}

.statusMessage {
  color: rgba(255, 255, 255, 0.9);
  font-size: 0.9rem;
  font-weight: 500;
  transition: all 0.3s ease;
}

.statusMessageWon {
  color: #4ade80;
  font-weight: bold;
}

.statusMessageGameOver {
  color: #f87171;
  font-weight: bold;
}

/* Color Palette - Compact Corner Design */
.colorPalette {
  position: fixed;
  bottom: 5.5rem;
  left: 0.5rem;
  z-index: 10;
  padding: 0.5rem;
  background: rgba(0, 0, 0, 0.85);
  backdrop-filter: blur(20px);
  border-radius: 8px;
  border: 1px solid rgba(255, 255, 255, 0.15);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  max-width: 280px;
  width: auto;
}

.colorPaletteGrid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 0.25rem;
  margin-bottom: 0.25rem;
}

.colorButton {
  width: 3rem;
  height: 3rem;
  border: 2px solid transparent;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 1rem;
  color: white;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);
}

.colorButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.3) 50%, transparent 70%);
  transform: translateX(-100%);
  transition: transform 0.6s ease;
}

.colorButton:hover {
  transform: scale(1.05);
  border-color: rgba(255, 255, 255, 0.3);
}

.colorButton:hover::before {
  transform: translateX(100%);
}

.colorButton:active {
  transform: scale(0.95);
}

.colorButtonDisabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.colorButtonDisabled::before {
  display: none;
}

.colorHotkey {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 1.2rem;
  font-weight: 900;
  color: white;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);
  z-index: 2;
  pointer-events: none;
}

.colorPaletteHint {
  display: flex;
  justify-content: center;
  padding-top: 0.5rem;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.keyboardHints {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  font-size: 0.7rem;
  color: rgba(255, 255, 255, 0.7);
  text-align: center;
}

.keyboardHints span {
  padding: 0.2rem 0.4rem;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 0.25rem;
  font-family: monospace;
}

/* Loading Spinner */
.loadingSpinner {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100vh;
  color: white;
}

.spinner {
  width: 3rem;
  height: 3rem;
  border: 3px solid rgba(255, 255, 255, 0.3);
  border-top: 3px solid white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Win Dialog Styles - Compact Toast-like */
.winDialogOverlay {
  position: fixed;
  top: 2rem;
  right: 2rem;
  z-index: 1000;
  pointer-events: none;
}

.winDialog {
  background: rgba(0, 0, 0, 0.85);
  backdrop-filter: blur(10px);
  border-radius: 12px;
  padding: 1.25rem;
  max-width: 320px;
  color: white;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.1);
  pointer-events: auto;
  position: relative;
}

.winDialogClose {
  position: absolute;
  top: 0.75rem;
  right: 0.75rem;
  background: none;
  border: none;
  color: rgba(255, 255, 255, 0.7);
  font-size: 1.5rem;
  cursor: pointer;
  transition: color 0.2s;
  padding: 0;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.winDialogClose:hover {
  color: white;
}

.winDialogContent {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.winTitle {
  margin: 0;
  font-size: 1.25rem;
  color: white;
  font-weight: 600;
  text-align: center;
}

.winStats {
  display: flex;
  justify-content: space-between;
  font-size: 0.875rem;
}

.stat {
  display: flex;
  gap: 0.25rem;
  align-items: baseline;
}

.statLabel {
  color: rgba(255, 255, 255, 0.7);
}

.statValue {
  color: white;
  font-weight: 600;
}

.winStars {
  display: flex;
  justify-content: center;
  gap: 0.25rem;
  font-size: 1.25rem;
}

.winStars .starFilled {
  color: #ffd700;
  text-shadow: 0 1px 2px rgba(255, 215, 0, 0.4);
}

.winStars .starEmpty {
  color: rgba(255, 255, 255, 0.3);
}

.winButtons {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.winButton {
  padding: 0.5rem 0.75rem;
  border: none;
  border-radius: 6px;
  font-size: 0.875rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.winButtonPrimary {
  background: rgba(76, 175, 80, 0.9);
  color: white;
}

.winButtonPrimary:hover {
  background: rgba(76, 175, 80, 1);
  transform: translateY(-1px);
}

.winButtonSecondary {
  background: rgba(33, 150, 243, 0.8);
  color: white;
}

.winButtonSecondary:hover {
  background: rgba(33, 150, 243, 1);
  transform: translateY(-1px);
}

.tierCompleteNotice {
  background: rgba(255, 152, 0, 0.9);
  color: white;
  padding: 0.5rem;
  border-radius: 6px;
  font-weight: 500;
  font-size: 0.75rem;
  text-align: center;
  margin-top: 0.25rem;
}

/* Level Selector Styles */
.levelSelectorOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(5px);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 2rem;
  box-sizing: border-box;
}

.levelSelectorModal {
  background: rgba(255, 255, 255, 0.95);
  border-radius: 16px;
  padding: 2rem;
  max-width: 1000px;
  max-height: 80vh;
  width: 100%;
  overflow-y: auto;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
}

.levelSelectorHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  padding-bottom: 1rem;
  border-bottom: 2px solid #e0e0e0;
}

.levelSelectorHeader h2 {
  margin: 0;
  color: #333;
  font-size: 1.5rem;
}

.closeButton {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: #666;
  width: 32px;
  height: 32px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
}

.closeButton:hover {
  background: #f0f0f0;
  color: #333;
}

.levelSelectorControls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  gap: 1rem;
  flex-wrap: wrap;
}

.difficultyFilters {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.difficultyFilter {
  padding: 0.6rem 1.2rem;
  border: 2px solid #ddd;
  background: white;
  border-radius: 25px;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 0.9rem;
  color: #666;
  font-weight: 500;
}

.difficultyFilter:hover {
  border-color: #2196F3;
  color: #2196F3;
  transform: translateY(-1px);
}

.difficultyFilterActive {
  background: #2196F3;
  border-color: #2196F3;
  color: white;
  transform: translateY(-1px);
  box-shadow: 0 4px 8px rgba(33, 150, 243, 0.3);
}

.randomLevelButton {
  padding: 0.75rem 1.5rem;
  background: linear-gradient(135deg, #FF6B6B, #FF8E53);
  color: white;
  border: none;
  border-radius: 25px;
  cursor: pointer;
  font-weight: bold;
  transition: all 0.2s ease;
  box-shadow: 0 4px 8px rgba(255, 107, 107, 0.3);
}

.randomLevelButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(255, 107, 107, 0.4);
}

.primaryRandomButton {
  padding: 1rem 2rem;
  background: linear-gradient(135deg, #FF6B6B, #FF8E53);
  color: white;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  font-weight: bold;
  font-size: 1.1rem;
  transition: all 0.3s ease;
  box-shadow: 0 6px 16px rgba(255, 107, 107, 0.4);
  margin-top: 1rem;
  width: 100%;
  text-align: center;
}

.primaryRandomButton:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 20px rgba(255, 107, 107, 0.5);
  background: linear-gradient(135deg, #FF5252, #FF7043);
}

.levelsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 1.5rem;
  margin-bottom: 1rem;
}

.levelCard {
  background: white;
  border: 2px solid #e0e0e0;
  border-radius: 12px;
  padding: 1rem;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.levelCard:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
  border-color: #2196F3;
}

.levelCardSelected {
  border-color: #4CAF50;
  background: #f8fff8;
  transform: scale(1.02);
}

.levelCardHovered .levelPreview {
  transform: scale(1.1);
}

.levelPreview {
  display: flex;
  justify-content: center;
  margin-bottom: 1rem;
  transition: transform 0.2s ease;
}

.miniCubePreview {
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease;
}

.levelInfo {
  text-align: center;
}

.levelHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.75rem;
}

.levelTitle {
  margin: 0;
  font-size: 1rem;
  color: #333;
  font-weight: 600;
}

.difficultyBadge {
  padding: 0.25rem 0.75rem;
  border-radius: 12px;
  color: white;
  font-size: 0.75rem;
  font-weight: bold;
  text-transform: uppercase;
}

.levelStats {
  display: flex;
  justify-content: space-around;
  margin-bottom: 0.75rem;
  padding: 0.5rem;
  background: #f8f9fa;
  border-radius: 8px;
}

.levelProgress {
  opacity: 0.7;
  transition: opacity 0.2s ease;
}

.levelCard:hover .levelProgress {
  opacity: 1;
}

.playHint {
  font-size: 0.875rem;
  color: #2196F3;
  font-weight: 500;
}

.noLevelsMessage {
  text-align: center;
  padding: 3rem;
  color: #666;
}

.noLevelsMessage p {
  font-size: 1.125rem;
  margin: 0;
}

/* Instructions Modal */
.instructionsOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 1rem;
}

.instructionsModal {
  background: white;
  border-radius: 1rem;
  max-width: 600px;
  width: 100%;
  max-height: 90vh;
  overflow-y: auto;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
}

.instructionsHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem 2rem 1rem;
  border-bottom: 1px solid #eee;
}

.instructionsHeader h2 {
  margin: 0;
  color: #2c3e50;
  font-size: 1.5rem;
}

.instructionsContent {
  padding: 1.5rem 2rem;
  color: #2c3e50;
  line-height: 1.6;
}

.instructionsContent h3 {
  color: #34495e;
  margin-top: 1.5rem;
  margin-bottom: 0.5rem;
  font-size: 1.1rem;
}

.instructionsContent h3:first-child {
  margin-top: 0;
}

.goal p {
  font-size: 1.1rem;
  font-weight: 500;
  color: #27ae60;
}

.howToPlay ol {
  padding-left: 1.2rem;
}

.howToPlay li {
  margin-bottom: 0.5rem;
}

.controlGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.5rem;
  margin-top: 1rem;
}

.controlGroup h4 {
  color: #3498db;
  margin: 0 0 0.5rem 0;
  font-size: 1rem;
}

.controlGroup p {
  margin: 0.25rem 0;
  font-size: 0.9rem;
}

.tips ul {
  padding-left: 1.2rem;
}

.tips li {
  margin-bottom: 0.3rem;
}

.instructionsFooter {
  padding: 1rem 2rem 1.5rem;
  text-align: center;
  border-top: 1px solid #eee;
}

.startPlayingButton {
  background: linear-gradient(135deg, #3498db, #2980b9);
  color: white;
  border: none;
  padding: 0.8rem 2rem;
  border-radius: 0.5rem;
  font-size: 1.1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
}

.startPlayingButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 16px rgba(52, 152, 219, 0.4);
}

.helpButton {
  position: fixed;
  top: 1rem;
  right: 1rem;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.9);
  border: 2px solid rgba(52, 152, 219, 0.8);
  color: #3498db;
  font-size: 1.2rem;
  font-weight: bold;
  cursor: pointer;
  z-index: 100;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
}

.helpButton:hover {
  background: #3498db;
  color: white;
  transform: scale(1.1);
}

/* Unified Control Panel */
.unifiedControlPanel {
  position: fixed;
  z-index: 10;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 12px;
  padding: 1.2rem;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
  color: white;
  font-family: inherit;
  
  /* Desktop: Right side panel */
  right: 1rem;
  top: 50%;
  transform: translateY(-50%);
  width: 240px;
  max-height: 80vh;
  overflow-y: auto;
  
  /* Desktop: Two sections stacked vertically */
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.controlSection {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.sectionTitle {
  font-size: 1rem;
  font-weight: 600;
  color: rgba(255, 255, 255, 0.9);
  margin: 0;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  padding-bottom: 0.5rem;
}

/* Desktop Layout: Sections as columns with vertical content */
.controlsSection {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  flex: 1;
}

.infoSection {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.5rem;
  padding-top: 1rem;
  border-top: 1px solid rgba(255, 255, 255, 0.2);
}

/* Game Controls */
.mainControlButtons {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 0.5rem;
  justify-items: center;
}

.dpadSection {
  flex-shrink: 0;
}

/* Legacy support for old class name */
.controlButtons {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 0.5rem;
  justify-items: center;
}

.buttonIcon {
  font-size: 1rem;
  line-height: 1;
}

.buttonLabel {
  font-size: 0.6rem;
  font-weight: 500;
  text-transform: uppercase;
  line-height: 1;
  opacity: 0.9;
}

/* Control button active state */
.controlButtonActive {
  background: rgba(59, 130, 246, 0.3);
  border-color: #3B82F6;
  box-shadow: 0 0 10px rgba(59, 130, 246, 0.5);
}

.controlButtonActive:hover {
  background: rgba(59, 130, 246, 0.4);
}

/* Difficulty Selection */
.difficultyFlowGroup {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.difficultyChip {
  display: flex;
  align-items: center;
  cursor: pointer;
  padding: 0.5rem 0.75rem;
  border-radius: 20px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  background: rgba(255, 255, 255, 0.1);
  transition: all 0.2s ease;
  position: relative;
  min-width: 60px;
  justify-content: center;
}

.difficultyChip:hover {
  background: rgba(255, 255, 255, 0.2);
  border-color: rgba(255, 255, 255, 0.5);
}

.difficultyChip input[type="radio"] {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.difficultyChip input[type="radio"]:checked + .difficultyLabel {
  color: white;
  font-weight: 600;
}

.difficultyChip:has(input:checked) {
  background: var(--tier-color, #2196F3);
  border-color: var(--tier-color, #2196F3);
  box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.3);
}

.difficultyLabel {
  font-size: 1rem;
  font-weight: 500;
  color: rgba(255, 255, 255, 0.9);
  transition: all 0.2s ease;
}

.newGameButton {
  padding: 0.75rem 1rem;
  background: linear-gradient(135deg, #FF6B6B, #FF8E53);
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-weight: 600;
  font-size: 1rem;
  transition: all 0.3s ease;
  box-shadow: 0 4px 8px rgba(255, 107, 107, 0.3);
}

.newGameButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 12px rgba(255, 107, 107, 0.4);
}

/* Color Grid */
.colorGrid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 0.5rem;
  justify-items: center;
}

.colorNumber {
  font-size: 1.1rem;
  font-weight: 900;
  color: white;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);
  z-index: 2;
  position: relative;
}

/* Game Info */
.currentMoves {
  display: inline-flex;
  gap: 0.5rem;
  align-items: center;
  font-size: 1.1rem;
  font-weight: 500;
}

.movesValue {
  font-weight: bold;
  transition: color 0.3s ease;
}

/* Move counter color states */
.movesGood {
  color: #4ade80; /* Green when below 80% */
}

.movesWarning {
  color: #fb923c; /* Orange when 80-100% */
}

.movesOver {
  color: #f87171; /* Red when over 100% */
}

.controlHints {
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.8);
  line-height: 1.4;
}

.hintLine {
  padding: 0.25rem 0;
}

/* Mobile adjustments for hamburger menu */
@media (max-width: 768px) {
  .hamburgerMenu {
    width: 100%;
    max-width: 400px;
  }
}

/* Mobile Layout: Bottom Panel */
@media (max-width: 768px) {
  .gameContainer {
    flex-direction: column;
  }
  
  .gameScene {
    margin-right: 0;
    margin-bottom: 120px; /* Account for horizontal bottom panel */
  }
  
  .unifiedControlPanel {
    /* Mobile: Bottom panel */
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    top: auto;
    width: 100%;
    max-height: 50vh;
    transform: none;
    border-radius: 12px 12px 0 0;
    padding: 0.8rem;
    
    /* Mobile: Sections as rows (stacked vertically) */
    flex-direction: column;
    gap: 0.8rem;
    overflow-y: auto;
    align-items: stretch;
  }
  
  /* Section 1: Controls section with horizontal layout on mobile */
  .controlsSection {
    flex: 1;
    display: flex;
    flex-direction: row;
    gap: 1rem;
    align-items: center;
    justify-content: space-around;
    padding-bottom: 0.8rem;
    border-left: none;
    padding-left: 0;
  }
  
  /* Section 2: Info section with horizontal layout on mobile */
  .infoSection {
    flex: 0 0 auto;
    display: flex;
    flex-direction: row;
    gap: 1rem;
    align-items: center;
    justify-content: space-between;
    padding-left: 0;
    padding-top: 0;
    border-left: none;
    border-top: 1px solid rgba(255, 255, 255, 0.15);
    min-width: auto;
  }
  
  .controlSection {
    flex-shrink: 0;
    gap: 0.6rem;
  }
  
  .gameControls .controlButtons,
  .gameControls .mainControlButtons {
    gap: 0.4rem;
  }
  
  .colorGrid {
    grid-template-columns: repeat(3, 1fr);
    gap: 0.4rem;
  }
  
  .controlHints {
    font-size: 0.9rem;
    text-align: center;
  }
  
  .hintLine {
    padding: 0.1rem 0;
  }
}

/* Small mobile adjustments */
@media (max-width: 480px) {
  .gameScene {
    margin-bottom: 140px; /* Account for compact horizontal layout */
  }
  
  .unifiedControlPanel {
    padding: 0.6rem;
    gap: 0.6rem;
  }
  
  .controlSection {
    gap: 0.5rem;
  }
  
  .colorButton {
    width: 2.5rem;
    height: 2.5rem;
    font-size: 1rem;
  }
  
  .controlButton {
    width: 2.5rem;
    height: 2.5rem;
    font-size: 1.4rem;
  }
  
  .currentMoves {
    font-size: 1rem;
    padding: 0.5rem 0.8rem;
  }
  
  .controlHints {
    font-size: 0.8rem;
  }
  
  .infoSection {
    min-width: 180px;
  }
}

/* Toast Notifications */
.toastContainer {
  position: fixed;
  top: 2rem;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1000;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  pointer-events: none;
}

.toast {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  border-radius: 12px;
  padding: 1rem 1.5rem;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
  border-left: 4px solid #4CAF50;
  position: relative;
  overflow: hidden;
  pointer-events: auto;
  cursor: pointer;
  transition: all 0.3s ease;
  animation: toastSlideIn 0.3s ease-out;
  min-width: 200px;
  max-width: 400px;
}

.toast:hover {
  transform: translateY(-2px);
  box-shadow: 0 12px 32px rgba(0, 0, 0, 0.25);
}

.toastSuccess {
  border-left-color: #4CAF50;
}

.toastWin {
  border-left-color: #2196F3;
}

.toastEfficient {
  border-left-color: #FF9800;
  background: linear-gradient(135deg, rgba(255, 152, 0, 0.1), rgba(255, 255, 255, 0.95));
}

.toastStars {
  border-left-color: #9C27B0;
  background: linear-gradient(135deg, rgba(156, 39, 176, 0.1), rgba(255, 255, 255, 0.95));
}

.toastContent {
  font-size: 0.9rem;
  font-weight: 500;
  color: #333;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  align-items: center;
}

.toastStarsDisplay {
  display: flex;
  gap: 0.25rem;
  justify-content: center;
}

.toastStarsDisplay .star {
  font-size: 1.2rem;
  transition: all 0.3s ease;
}

.toastStarsDisplay .starFilled {
  color: #fbbf24;
  text-shadow: 0 0 8px #fbbf24;
  animation: starPulse 0.6s ease-out;
}

.toastStarsDisplay .starEmpty {
  color: #ddd;
}

.toastProgress {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 3px;
  background: linear-gradient(90deg, #4CAF50, #2196F3);
  animation: toastProgress linear;
  transform-origin: left;
}

@keyframes toastSlideIn {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes toastProgress {
  from {
    transform: scaleX(1);
  }
  to {
    transform: scaleX(0);
  }
}

@keyframes starPulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}

/* Minimal Controls */
.minimalControls {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  z-index: 100;
}

.controlsLeft,
.controlsRight {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.controlsCenter {
  display: flex;
  gap: 1rem;
  align-items: center;
  color: white;
}

.minimalButton {
  padding: 0.5rem 1rem;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  border-radius: 0.5rem;
  cursor: pointer;
  transition: all 0.2s;
  font-size: 0.9rem;
}

.minimalButton:hover:not(:disabled) {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-1px);
}

.minimalButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.minimalButtonActive {
  background: rgba(59, 130, 246, 0.3);
  border-color: #3B82F6;
}

.iconButton {
  min-width: 2.5rem;
  height: 2.5rem;
  padding: 0.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.1rem;
}

.minimalButton span {
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Lucide icon styles */
.minimalButton svg,
.dpadButton svg,
.hamburgerButton svg,
.closeButton svg,
.closeMenuButton svg,
.winDialogClose svg {
  display: block;
  width: 1em;
  height: 1em;
}

.newGameContainer {
  position: relative;
}

.newGameMenu {
  position: absolute;
  bottom: 100%;
  right: 0;
  margin-bottom: 0.5rem;
  background: rgba(0, 0, 0, 0.9);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 0.75rem;
  padding: 1rem;
  min-width: 200px;
  z-index: 1000;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

.newGameHeader {
  color: white;
  font-size: 0.9rem;
  font-weight: 600;
  margin-bottom: 0.75rem;
  text-align: center;
}

.cubeSizeSelectorCompact {
  margin-bottom: 0.75rem;
}

.cubeSizeSelectorCompact h3 {
  display: none;
}

.cubeSizeSelectorCompact p {
  display: none;
}

.cubeSizeSelectorCompact .grid {
  gap: 0.5rem;
}

.cubeSizeSelectorCompact button {
  padding: 0.5rem;
  font-size: 0.8rem;
  border-radius: 0.375rem;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  transition: all 0.2s;
}

.cubeSizeSelectorCompact button:hover {
  background: rgba(255, 255, 255, 0.2);
}

.cubeSizeSelectorCompact button.active,
.cubeSizeSelectorCompact button[class*="bg-blue"] {
  background: rgba(59, 130, 246, 0.4);
  border-color: #3B82F6;
  color: white;
}

/* Override Tailwind classes in compact cube selector */
.cubeSizeSelectorCompact button[class*="bg-gray"] {
  background: rgba(255, 255, 255, 0.1);
  color: white;
}

.cubeSizeSelectorCompact button[class*="bg-gray"]:hover {
  background: rgba(255, 255, 255, 0.2);
}

.cubeSizeSelectorCompact .gridCols2 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
}

.closeMenuBtn {
  width: 100%;
  padding: 0.5rem;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  border-radius: 0.375rem;
  cursor: pointer;
  transition: all 0.2s;
  font-size: 0.8rem;
}

.closeMenuBtn:hover {
  background: rgba(255, 255, 255, 0.2);
}

.moveCounter {
  font-size: 1rem;
  font-weight: 500;
}

.movesGood { color: #4CAF50; }
.movesWarning { color: #FF9800; }
.movesOver { color: #F44336; }

.cubeSizeIndicator {
  font-size: 0.9rem;
  opacity: 0.7;
}

/* Floating Top Right Buttons */
.floatingTopRightButtons {
  position: fixed;
  top: 1rem;
  right: 4rem; /* Offset to avoid help button */
  display: flex;
  gap: 0.5rem;
  z-index: 200;
}

.floatingTopRightButtons .newGameContainer {
  position: relative;
}

.floatingTopRightButtons .minimalButton {
  background: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
}

.floatingTopRightButtons .minimalButton:hover {
  background: rgba(0, 0, 0, 0.9);
  border-color: rgba(255, 255, 255, 0.3);
  transform: translateY(-1px);
}

.floatingTopRightButtons .newGameMenu {
  position: absolute;
  top: 100%;
  right: 0;
  margin-top: 0.5rem;
  background: rgba(0, 0, 0, 0.9);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 0.75rem;
  padding: 1rem;
  min-width: 200px;
  z-index: 1000;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
}

/* Hamburger Menu */
.hamburgerButton {
  padding: 0.5rem 0.75rem;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  border-radius: 0.5rem;
  cursor: pointer;
  font-size: 1.2rem;
  transition: all 0.2s;
}

.hamburgerButton:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-1px);
}

.menuOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  z-index: 2000;
}

.hamburgerMenu {
  position: fixed;
  right: 0;
  top: 0;
  bottom: 0;
  width: 320px;
  background: rgba(20, 20, 20, 0.95);
  backdrop-filter: blur(20px);
  border-left: 1px solid rgba(255, 255, 255, 0.1);
  z-index: 2001;
  overflow-y: auto;
  padding: 1rem;
}

.menuHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
}

.menuHeader h2 {
  margin: 0;
  color: white;
}

.closeMenuButton {
  background: none;
  border: none;
  color: white;
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0.5rem;
}

.menuSection {
  margin-bottom: 2rem;
}

.menuSection h3 {
  color: white;
  margin-bottom: 1rem;
  font-size: 1rem;
  opacity: 0.8;
}

.cubeSizeButtons {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.5rem;
}

.sizeButton {
  padding: 0.75rem;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  border-radius: 0.5rem;
  cursor: pointer;
  transition: all 0.2s;
}

.sizeButton:hover {
  background: rgba(255, 255, 255, 0.2);
}

.sizeButtonActive {
  background: rgba(59, 130, 246, 0.3);
  border-color: #3B82F6;
}

.toggleOption {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: white;
  cursor: pointer;
  padding: 0.5rem 0;
}

.toggleOption input[type="checkbox"] {
  width: 1.2rem;
  height: 1.2rem;
  cursor: pointer;
}

.animationControls {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.animationSelect {
  flex: 1;
  padding: 0.5rem;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  border-radius: 0.5rem;
  cursor: pointer;
  font-size: 0.9rem;
}

.animationSelect:hover {
  background: rgba(255, 255, 255, 0.15);
}

.animationSelect option {
  background: #222;
  color: white;
}

.menuButton {
  width: 100%;
  padding: 0.75rem;
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  border-radius: 0.5rem;
  cursor: pointer;
  transition: all 0.2s;
  font-size: 1rem;
}

.menuButton:hover {
  background: rgba(255, 255, 255, 0.2);
}

.menuButtonPrimary {
  background: rgba(59, 130, 246, 0.3);
  border-color: #3B82F6;
}

.menuButtonPrimary:hover {
  background: rgba(59, 130, 246, 0.4);
}

.specialPuzzles {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.specialPuzzleButton {
  padding: 0.5rem;
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  color: white;
  border-radius: 0.25rem;
  cursor: pointer;
  transition: all 0.2s;
  text-align: left;
  font-size: 0.9rem;
}

.specialPuzzleButton:hover {
  background: rgba(255, 255, 255, 0.1);
}

.shortcutsList {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.shortcut {
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: white;
  font-size: 0.9rem;
}

.shortcut .key {
  background: rgba(255, 255, 255, 0.1);
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  font-family: monospace;
  min-width: 3rem;
  text-align: center;
}

.shortcut .action {
  opacity: 0.8;
}

/* Floating Color Palette - inherits from main color-palette styles */
.floatingPalette {
  /* Override position to be bottom-left corner above bottom bar */
  position: fixed;
  bottom: 6rem;
  left: 1rem;
  z-index: 150;
  background: rgba(0, 0, 0, 0.85);
  padding: 0.75rem;
  border-radius: 12px;
  border: 1px solid rgba(255, 255, 255, 0.15);
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  max-width: 280px;
  width: auto;
}

.floatingPalette .colorPaletteGrid {
  margin-bottom: 0.5rem;
}

/* D-pad Controls */
.dpadControls {
  position: fixed;
  bottom: 5.5rem;
  right: 0.5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0;
  z-index: 50;
}

.dpadHorizontal,
.dpadZoomRow {
  display: flex;
  gap: 0;
  align-items: center;
}

.dpadButton {
  width: 40px;
  height: 40px;
  background: rgba(0, 0, 0, 0.7);
  border: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  font-size: 1.2rem;
  cursor: pointer;
  transition: all 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
}

.dpadButton:hover:not(:disabled) {
  background: rgba(255, 255, 255, 0.2);
}

.dpadButton:active:not(:disabled) {
  background: rgba(255, 255, 255, 0.3);
  transform: scale(0.95);
}

.dpadButton:disabled {
  opacity: 0.3;
  cursor: default;
}

.dpadZoom {
  font-size: 1rem;
  font-weight: bold;
}

.dpadUp {
  border-radius: 8px 8px 0 0;
}

.dpadDown {
  border-radius: 0 0 8px 8px;
}

.dpadLeft {
  border-radius: 8px 0 0 8px;
}

.dpadRight {
  border-radius: 0 8px 8px 0;
}

.dpadCenter {
  background: rgba(0, 0, 0, 0.9);
  font-size: 0.8rem;
}

/* Mobile toast adjustments */
@media (max-width: 768px) {
  .toastContainer {
    top: 1rem;
    left: 1rem;
    right: 1rem;
    transform: none;
  }
  
  .toast {
    max-width: none;
    width: 100%;
  }
}

/* Visual effects overlays - ensure they don't block pointer events */
.moveEffects,
.comboTracker {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 100;
}

.floatingNumber,
.pulseEffect,
.comboDisplay {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
}

.floatingNumber {
  font-size: 1.5rem;
  font-weight: bold;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  transition: all 0.3s ease;
}

.pulseEffect {
  width: 100px;
  height: 100px;
  border: 3px solid;
  border-radius: 50%;
  opacity: 0;
}

.comboDisplay {
  background: rgba(0, 0, 0, 0.8);
  padding: 1rem 2rem;
  border-radius: 12px;
  color: white;
  font-weight: bold;
  text-align: center;
  animation: comboAppear 0.3s ease;
}

.comboMessage {
  font-size: 1.2rem;
  margin-bottom: 0.5rem;
}

.bestCombo {
  font-size: 0.9rem;
  opacity: 0.8;
}

.comboNice { background: rgba(33, 150, 243, 0.9); }
.comboAmazing { background: rgba(76, 175, 80, 0.9); }
.comboIncredible { background: rgba(255, 152, 0, 0.9); }
.comboFire { background: rgba(244, 67, 54, 0.9); }

@keyframes comboAppear {
  from {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.8);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* High contrast mode */
@media (prefers-contrast: high) {
  .unifiedControlPanel {
    background: rgba(0, 0, 0, 0.9);
    border-color: white;
  }
  
  .controlButton {
    background: white;
    color: black;
  }
  
  .colorButton {
    border: 2px solid white;
  }
  
  .toast {
    background: white;
    border: 2px solid black;
  }
}

/* D-pad Rotation Controls - Mac keyboard layout */
.rotationDpad {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.25rem;
  flex-shrink: 0;
}

.dpadBottomRow {
  display: flex;
  gap: 0.25rem;
}

.rotationButton {
  min-width: 2rem;
  width: 2rem;
  height: 2rem;
  padding: 0;
  font-size: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: row;
  gap: 0;
}

.rotationButton .buttonLabel {
  display: none;
}

/* Mobile responsive adjustments for our new layout */
@media (max-width: 768px) {
  .mainControlButtons {
    gap: 0.4rem;
  }
  
  .rotationButton {
    min-width: 2.2rem;
    width: 2.2rem;
    height: 2.2rem;
    font-size: 1.1rem;
  }
  
  .infoButton {
    width: 2.5rem;
    height: 2.5rem;
  }
  
  .levelSelectorOverlay {
    padding: 1rem;
  }
  
  .levelSelectorModal {
    padding: 1.5rem;
    max-height: 90vh;
  }
  
  .levelsGrid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  
  .levelSelectorControls {
    flex-direction: column;
    align-items: stretch;
  }
  
  .difficultyFilters {
    justify-content: center;
  }
  
  .gameHud {
    padding: 0.75rem;
  }
  
  .hudTop {
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .movesCounter {
    font-size: 1.2rem;
  }
  
  .controlButton {
    width: 2rem;
    height: 2rem;
    font-size: 1rem;
  }
  
  .colorPalette {
    padding: 0.6rem;
    max-width: 240px;
    bottom: 5.5rem;
    left: 0.5rem;
  }
  
  .colorPaletteGrid {
    gap: 0.4rem;
  }
  
  .colorButton {
    width: 3rem;
    height: 3rem;
    font-size: 1rem;
  }
  
  .colorHotkey {
    font-size: 1rem;
  }
  
  .keyboardHints {
    flex-direction: column;
    gap: 0.2rem;
    align-items: center;
  }
  
  .instructionsModal {
    margin: 0.5rem;
    max-height: 95vh;
  }
  
  .instructionsHeader {
    padding: 1rem 1.5rem 0.5rem;
  }
  
  .instructionsContent {
    padding: 1rem 1.5rem;
  }
  
  .controlGrid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  
  .instructionsFooter {
    padding: 0.8rem 1.5rem 1rem;
  }
  
  .helpButton {
    top: 0.5rem;
    right: 0.5rem;
    width: 35px;
    height: 35px;
    font-size: 1rem;
  }
}

@media (max-width: 480px) {
  .gameHud {
    padding: 0.5rem;
  }
  
  .hudTop {
    font-size: 0.9rem;
  }
  
  .movesCounter {
    font-size: 1rem;
  }
  
  .colorPalette {
    padding: 0.5rem;
    max-width: 200px;
    bottom: 5.25rem;
    left: 0.25rem;
  }
  
  .colorButton {
    width: 2.5rem;
    height: 2.5rem;
    font-size: 0.9rem;
  }
  
  .colorHotkey {
    font-size: 0.9rem;
  }
  
  .keyboardHints {
    display: none;
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms;
    animation-iteration-count: 1;
    transition-duration: 0.01ms;
  }
}

/* Responsive utilities */
@media (max-width: 767px) {
  .hideMobile { display: none; }
}
@media (min-width: 768px) {
  .hideDesktop { display: none; }
}